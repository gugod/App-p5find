#!/usr/bin/env perl
use v5.18;

use App::p5find qw<p5_doc_iterator>;

use Getopt::Long 'GetOptions';

sub print_usage {
    print <<USAGE;
p5find-sub [switches] name [path1] [path2]...

  -h    show help message

For more documentation, see: perldoc p5find-sub
USAGE
}

my %opts;
GetOptions(
    \%opts,
    "h",
    "a|all"
);

if ($opts{h}) {
    print_usage();
    exit(0);
}

my ($wanted_sub_name, @paths);

unless ($opts{a}) {
    $wanted_sub_name = shift @ARGV;
}

@paths = @ARGV;
@paths = ('.') unless @paths;

my $iter = p5_doc_iterator(@paths);
while (my $doc = $iter->()) {
    my $file = $doc->filename;

    my $o = $doc->find(
        sub {
            my $el = $_[1];
            return (
                $el->isa("PPI::Token::Word") && $el eq "sub" && (
                    $el->parent->isa("PPI::Statement::Sub") ||
                    $el->snext_sibling()->isa("PPI::Structure::Block")
                )
            );
        }
    ) or next;

    my %hits;
    for my $token (@$o) {
        # $token is the word "sub"
        my $el = $token->parent;
        my $sub_name = $el->isa("PPI::Statement::Sub") ? $el->name : "(anonymous)";
        if ( $opts{a} || $wanted_sub_name eq $sub_name ) {
            my $ln = $token->line_number;
            $hits{$ln} = 1;
        }
    }

    if (%hits) {
        my $line_number = 0;
        open my $fh, "<", $file;
        while (my $line = <$fh>) {
            $line_number++;
            if ($hits{$line_number}) {
                print "${file}:${line_number}:${line}";
            }
        }
        close($fh);
    }
}
